Web Design Rules: Elements and Components.

From Elemnts to Webpage.

Elements-components-[using-patterm]-layouts-webpage

1.Use common elements and components to convey your website's information.

2.Combine components into layouts using commonl-ayouts-patterns.

3.Assemble different layout-areas into a complete, final page.

Common Elements, Components, Section Components, Layout Patterns.

A.Elements:

-Text.
-Buttons.
-Images.
-Input elements.
-Tags.

B.Components:

-Breadcrumbs.
-Pagination
-Alert and Status bars.
-Statistics.
-Gallery.
-Feature Box.
-Preview and profile cards.
-Accordion.
-Tabs.
-Carousel.
-Customer testimonials.
-Customer logos
-Featured-in logos.
-Steps.
-Forms.
-Tables.
-Pricing tables.
-Modal Windows.

C.Section Components:

-Navigation.
-Hero section.
-Footer.
-Call-to-action section.
-Feature row.

D.Layout Patterns:

-Row of boxes or cards.
-Grid of boxes or cards.
-Z-pattern.
-F-pattern.
-Single-column.
-Sidebar.
-Multi-column/magazine.
-Asymmetry/Experimental.

Switching Flex-Direction to Column.

-Initial display property is horizontal on the main axis.
-Setting the elements to flex-direction: column; changes the direction of the main axis by 90 degrees and therefore the display ends up on a vertival axix.[top-bottm]

-Cross axis will lie on the horizontal axis which was previously on the vertical axis.

## NB every thing has been shifted by 90 degrees.

i.e-align-items aligns items [horizontally], no onger vertically.
-justify-content aligns items [vertically], no longer horizontally.
-gap acts like [margin-bottom], no longer like margin-right.

## NB take aways from BUILDING AN ACCORDION COMPONENT.

-OPEN STATE.
-SETTIGN FLEX CONTAINER TO FLEX DIRECTION COLUMN.
-USING CSS GRID TO SET GRID TEMPLATE COLUMN AND COLUMN GAPS

-True power of flex box and css grid box to design webpages.

VERTICAL CENTERING with absolute posiiton and transformation.

-Setting ellement to 50% in css i.e[top:50%] element will move 50% of parent container's height.

-Therefore we use the tranform property with translate value (ignoring the x horizontal) value. i.e[transform:translate(0,-50%)]

-The code will move the elemnt -50% of actual element's height fitting it exactly at the center.
